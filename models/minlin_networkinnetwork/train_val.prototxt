name: "nin_imagenet"

layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_value: 104.00699
    mean_value: 116.66877
    mean_value: 122.67892
  }
  data_param {
    source: "D:/camvid-lmdb"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 104.00699
    mean_value: 116.66877
    mean_value: 122.67892
  }
  data_param {
    source: "C:/Users/Oeljeklaus/Desktop/winpycaffe/examples/fine_tune_alexnet_fcn/camseq01-lmdb"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "label"
  type: "Data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "D:/camvid-gt-lmdb"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "label"
  type: "Data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "C:/Users/Oeljeklaus/Desktop/winpycaffe/examples/fine_tune_alexnet_fcn/camseq01_gt-lmdb"
    batch_size: 5
    backend: LMDB
  }
}

layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu0"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "cccp1"
  name: "cccp1"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp1"
  top: "cccp1"
  name: "relu1"
  type: "ReLU"
}
layer {
  bottom: "cccp1"
  top: "cccp2"
  name: "cccp2"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp2"
  top: "cccp2"
  name: "relu2"
  type: "ReLU"
}
layer {
  bottom: "cccp2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu3"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "cccp3"
  name: "cccp3"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp3"
  top: "cccp3"
  name: "relu5"
  type: "ReLU"
}
layer {
  bottom: "cccp3"
  top: "cccp4"
  name: "cccp4"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp4"
  top: "cccp4"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "cccp4"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "cccp5"
  name: "cccp5"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp5"
  top: "cccp5"
  name: "relu8"
  type: "ReLU"
}
layer {
  bottom: "cccp5"
  top: "cccp6"
  name: "cccp6"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp6"
  top: "cccp6"
  name: "relu9"
  type: "ReLU"
}
layer {
  bottom: "cccp6"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "pool3"
  name: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "pool3"
  top: "conv4"
  name: "conv4-1024"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "relu10"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "cccp7"
  name: "cccp7-1024"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp7"
  top: "cccp7"
  name: "relu11"
  type: "ReLU"
}
layer {
  bottom: "cccp7"
  top: "cccp8-new"
  name: "cccp8-1024-new"
  type: "Convolution"
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
    lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp8-new"
  top: "cccp8-new"
  name: "relu12"
  type: "ReLU"
}
#layers {
#  bottom: "cccp8"
#  top: "pool4"
#  name: "pool4"
#  type: POOLING
#  pooling_param {
#    pool: AVE
#    kernel_size: 6
#    stride: 1
#  }
#}

layer {
  name: "upsample"
  type: "Deconvolution"
  bottom: "cccp8-new"
  top: "bigscore"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 67
#    group: 32
    stride: 32
  }
}

layer {
	type: "Crop"
	name: "score"
	bottom: "bigscore"
	bottom: "data"
	top: "score"
}

layer {
  name: "prob"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 255
    normalize: true
    # normalize: false
  }
}